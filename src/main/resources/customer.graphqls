type Customer {
    id: ID!
    firstname: String
    lastname: String
    email: String
    mobile: String
    totalPoints: Long
    spentPoints: Long
    addresses: [Address]
}

type Address {
    id: ID
    firstName: String
    lastName: String
    line1: String
    line2: String
    city: String
    mobile: String
    alias: String
             lng: String
             lat: String
             plusCode: String
    country: String
    state: String
}

input AddressInput {
    id: ID
    line1: String
    line2: String
    firstName: String
    lastName: String
    city: String
    country: String
    state: String
    mobile: String
    alias: String
    lng: String
    lat: String
    plusCode: String
}

extend type Mutation {
    resetPassword(email: String): String
    saveAddress(address: AddressInput): AddressResponse
    deleteAddress(id: ID): AddressResponse
    #signUp(email: String, password: String, firstName: String, lastName: String, mobile: String, title: String, birthDate: String): Customer
    #updatePhone(phone: String!): Customer
    #addAddress(address: AddressInput): [Address]
    #removeAddress(addressId: Int): [Address]
    #updateAddress(addressId: Int, address: AddressInput): [Address]
}

extend type Query {
    #getAddresses(customerId: Int): [Address]
    customer(mobile: String): Customer
    #getAddress(addressId: Int): Address
    me: Customer
    meTest(id: Long): Customer
    customers: [Customer]
    addresses: AddressList
    addressDescription(isoCode: String, lang: String): AddressFormat
}

type AddressList {
    addresses: [Address]
    displayFormat: String
}

enum AddressField {
    firstName, lastName, line1, line2, postalCode, state, city, mobile, alias, country, save
}

enum OptionType {
    REQUIRED, OPTIONAL, NONE
}

enum FieldType {
    TEXT, REMOTE_SELECT, REMOTE_AUTOCOMPLETE, SELECT, CHECKBOX, AUTOCOMPLETE, MOBILE
}

type AddressFormat {
    inputFormat: String
    displayFormat: String
    descriptions: [FieldDescription]
    gmap: OptionType
}

type FieldDescription {
    field: AddressField
    label: String
    required: Boolean
    minLength: Int
    maxLength: Int
    regex: String
    fieldType: FieldType
    options: [Option]
}

type Option {
    label: String
    value: String
}

type AddressResponse {
    address: Address
    success: Boolean
    message: String
    code: String
}
extend type Query {
    tenantProduct(slug: String ): Product
    variationOptions (name: String): VariationOption
    tenantTags: [TenantTag]
    tenantTagProducts(hashtag: String): ProductResponse
    tenantOrders(state: [OrderState], limit: Int = 10, offset: Int = 0): OrderResponse
    tenantOrder(ref: String): Order
    tenantByName (name: String): Tenant
    currentTenant: Tenant
    cart(secureKey: String): Cart
    orderSummary(ref: String, confirmationKey: String): Order
    tenantSliders(locale: String): [Attribute]
    #partnerOrders(state: [OrderState], offset: Int, limit: Int, searchText: String): OrderResponse
    #partnerOrder(id: ID): Order
}
extend type Mutation {
    updateTenantCart(secureKey: String, items: [CartItemInput], isMerge: Boolean, ): CartResponse
    createTenantCheckout(secureKey: String, items: [CartItemInput]): CheckoutSession
}

type TenantTag {
    id: Long
    langs: [I18String]
    icon: String
    position: Int
}

input TenantTagInput {
    id: Long
    langs: [I18StringInput]
    icon: String
    position: Int
}

input I18StringInput {
    lang: String
    value: String
}

type Tenant {
    id: Long
    logo: String
    name: String
    maxProducts: Int
    planName: String
    discountRate: Int
    active: Boolean
    monthlyFee: BigDecimal
    skuPrefix: String
    contractStartDate: LocalDate
    publicPaymentProfile: [PaymentDef]
    tenantId: String
}

type PaymentDef {
    name: String
    pk: String
    code: String
}


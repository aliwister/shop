enum CartState {
    UNCLAIMED
    CLAIMED
    CLOSED
}

type Cart {
    id: ID!,
    secureKey: String,
    gift: Boolean,
    giftMessage: String,
    #customer: Customer,
    cartItems: [CartItem]
    currency: String
    adjustments: AdjustmentProfile
    cartRule: TenantCartRule
    additionalInfo: String
}

type Wishlist {
    id: ID!
    customerId: ID
#    currencyId: ID
    tenantId: ID
#    adjustments: String
    wishlistItems: [WishlistItem]
}

type WishlistItem {
    id: ID!
    quantity: Int
    productId: ID!
    tenantId: String
}

type CartResponse {
    cart: Cart
    success: Boolean
    message: String
}

type CheckoutSessionResponse {
    secureKey: String
    success: Boolean
    message: String
}

input CartInput {
    id: ID,
    secureKey: String,
    gift: Boolean,
    giftMessage: String
    cartState: CartState
    customerId: Int
}

type CartItem {
    id: ID,
    productId: Long,
    quantity: Int
    image: String
    url: String
    title: String
    price: String
    salePrice: String
    listPrice: String
    currency: String
    slug: String
    api: String
    sku: String
    unit: String
}

input CartItemInput {
    productId: Long,
    quantity: Int
}


type CheckoutSession {
    redirectUrl: String,
    secureKey: String
}



type Reward {
    rewardType: String
    points: Int
    rewardInfo: [RewardInfo]
}

type RewardInfo {
    language: String
    name: String
    description: String
}

type LineItem {
    productId: Long
    sku: String
    image: String
    name: String
    quantity: Float
    price: Float
    cost: Float
    subTotal: Float
    url: String
    ref: String
}
type Checkout {
    id: ID!
    ref: String
    name: String
    phone: String
    email: String
    secureKey: String
    carrier: String
    currency: String
    items: [LineItem]
    #tenantId: Long
}

enum DiscountType {
    ALL
    HASHTAG
    CATEGORY
}

enum DiscountReductionType {
    AMOUNT
    PERCENT
}

type DiscountRule {
    minCartSize: Int
}

input DiscountRuleInput {
    minCartSize: Int
}

type DiscountCheckoutRule {
    excludedCarriers: [String]
    excludedPayments: [String]
}

input DiscountCheckoutRuleInput {
    excludedCarriers: [String]
    excludedPayments: [String]
}

type PriceMap {
    prices: String
    base: String
}

type AdjustmentProfile{
    discount: PriceMap
    discountReductionType: DiscountReductionType
}

type TenantCartRule {
    coupon: String
    autoApply: Boolean
    canCombine: Boolean
    enabled: Boolean
    priority: Int
    description: [I18String!]!
    rules: [DiscountRule!]!
    checkoutRules: [DiscountCheckoutRule!]!
    discountType: DiscountType!
    reductionType: DiscountReductionType!
    discount: PriceMap
}

type TenantCartRuleDTO {
    coupon: String
    autoApply: Boolean
    canCombine: Boolean
    enabled: Boolean
    priority: Int
    description: [I18String!]!
    rules: [DiscountRule]
    checkoutRules: [DiscountCheckoutRule]
    discountType: DiscountType!
    reductionType: DiscountReductionType!
    discount: String
}

input TenantCartRuleInput{
    coupon: String
    autoApply: Boolean
    canCombine: Boolean
    enabled: Boolean
    priority: Int
    description: [I18StringInput!]!
    rules: [DiscountRuleInput!]!
    checkoutRules: [DiscountCheckoutRuleInput!]!
    discountType: DiscountType!
    reductionType: DiscountReductionType!
    discount: String
}

input PriceInput {
    amount: BigDecimal
    currency: String
}

type Attribute {
    name: String
    value: String
}

type VariationOption {
    label: String
    name: String
    values: [String]
}

input VariationOptionInput {
    label: String
    name: String
    values: [String] #Ordered
}

type Variation {
    ref: ID!
    variationAttributes: [Attribute]
}

type PartnerProduct {
      id: ID           # Auto generated

      sku: String
      upc: String

      ref: String      # Auto generated

      slug: String     # Must be Unique
      brand: String    # The English value
      name: String    # The English value

      image: String    # Main image

      price: BigDecimal
      cost: BigDecimal
      weight: BigDecimal

      slug: String
      variationType: String     # SIMPLE, CHILD, PARENT
      unit: String     #

      availability: Int  # In hours


      salePrice: BigDecimal
      quantity: BigDecimal


      discountInPercent: Int

      options: [VariationOption]
      langs: [ProductI18n]
      gallery: [String]   # Ordered
      children: [ChildProduct]
}

type MerchantProductResponse {
        items: [MerchantProduct]
        total: Int!
        hasMore: Boolean!
}

input PartnerProductInput {
      id: ID           # Auto generated

      sku: String
      upc: String
      model: String

      ref: String      # Auto generated

      slug: String     # Must be Unique
      brand: String    # The English value
      name: String    # The English value

      image: String    # Main image

      price: BigDecimal
      cost: BigDecimal
      weight: BigDecimal

      variationType: String     # SIMPLE, CHILD, PARENT
      unit: String

      availability: Int  # In hours

      salePrice: BigDecimal
      quantity: BigDecimal

      discountInPercent: Int

      gallery: [String]   # Ordered
      children: [ChildProductInput]
      prices: [PriceInput]
      langs: [ProductI18nInput]
      options: [VariationOptionInput]
}

type ChildProduct {
      id: ID
      slug: String     # Must be Unique
      brand: String    # The English value
      name: String    # The English value

      image: String    # Main image

      price: BigDecimal
      cost: BigDecimal
      weight: BigDecimal

      availability: Int  # In hours

      salePrice: BigDecimal
      quantity: BigDecimal
      discountInPercent: Int

      gallery: [String]   # Ordered
      variationAttributes: [Attribute]
}


input ChildProductInput {
      slug: String     # Must be Unique
      brand: String    # The English value
      name: String    # The English value

      sku: String
      upc: String
      model: String

      image: String    # Main image

      price: BigDecimal
      cost: BigDecimal
      weight: BigDecimal

      availability: Int  # In hours

      salePrice: BigDecimal
      quantity: BigDecimal
      discountInPercent: Int

      gallery: [String]   # Ordered
      variationAttributes: [AttributeInput]
}



extend type Query {
    partnerProduct(id: ID): PartnerProduct
}

extend type Mutation {
    createPartnerProduct(product: PartnerProductInput) : Message
    getPartnerImageUploadUrl(filename: String, contentType: String): PresignedUrl

    savePrice(id: ID, price: PriceInput) : Message
    saveLang(id: ID, desc: ProductI18nInput) : Message
    saveChild(id: ID, child: ChildProductInput) : Message

    removePrice(id: ID, currency: String) : Message
    removeLang(id: ID, lang: String) : Message
    removeChild(id: ID, id: ID) : Message

    approveProduct(id: ID): Message
}

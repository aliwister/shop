type Price {
    amount: BigDecimal
    currency: String
}
input PriceInput {
    amount: BigDecimal
    currency: String
}


type ProductI18n {
    title: String
    description: String
    model: String
    features: [String]
    brand: String
    lang: String #ar #en
}

input ProductI18nInput {
    title: String
    description: String
    model: String
    features: [String]
    brand: String
    lang: String
}

type Attribute {
    name: String
    value: String
}

type VariationOption {
    label: String
    name: String
    values: [String]
}

input VariationOptionInput {
    label: String
    name: String
    values: [String] #Ordered
}

type Variation {
    ref: ID!
    variationAttributes: [Attribute]
}

type PartnerProduct {
      id: ID           # Auto generated

      sku: String
      upc: String

      ref: String      # Auto generated

      slug: String     # Must be Unique
      brand: String    # The English value
      name: String    # The English value

      image: String    # Main image

      priceObj: Price
      costObj: Price


      weight: BigDecimal

      slug: String
      variationType: String     # SIMPLE, CHILD, PARENT
      unit: String     #

      availability: Int  # In hours


      salePriceObj: Price
      quantity: BigDecimal


      discountInPercent: Int

      options: [VariationOption]
      langs: [ProductI18n]
      gallery: [String]   # Ordered
      children: [ChildProduct]
}

type MerchantProductResponse {
        items: [MerchantProduct]
        total: Int!
        hasMore: Boolean!
}

type ChildProduct {
      id: ID
      slug: String     # Must be Unique
      image: String    # Main image

      priceObj: Price # null For Parent
      costObj:  Price # null For Parent
      salePriceObj: Price # null For Parent

      weight: BigDecimal
      availability: Int  # In hours

      quantity: BigDecimal
      discountInPercent: Int

      gallery: [String]   # Ordered
      variationAttributes: [Attribute]
}


input PartnerProductInput {
      id: ID           # Auto generated

      sku: String
      upc: String
      model: String

      hashtags: [String]  #Hashtags
      slug: String     # Must be Unique
      brand: String    # The English value
      name: String    # The English value

      image: String    # Main image

      priceObj: PriceInput # null For Parent
      costObj:  PriceInput # null For Parent
      salePriceObj: PriceInput # null For Parent

      weight: BigDecimal # KG
      variationType: String     # SIMPLE, CHILD, PARENT
      unit: String
      availability: Int  # In hours

      quantity: BigDecimal

      gallery: [String]   # Ordered
      children: [ChildProductInput]
      langs: [ProductI18nInput]
      options: [VariationOptionInput]
}

input ChildProductInput {
      sku: String
      upc: String

      weight: BigDecimal
      availability: Int  # In hours
      priceObj: PriceInput
      costObj: PriceInput
      salePriceObj: PriceInput
      quantity: BigDecimal

      gallery: [String]   # Ordered
      image: String    # Main image
      variationAttributes: [AttributeInput]
      isDirty: Boolean
      active: Boolean
}



extend type Query {
    partnerProduct(id: ID): PartnerProduct
}

extend type Mutation {
    savePartnerProduct(product: PartnerProductInput): Message
    getPartnerImageUploadUrl(filename: String, contentType: String): PresignedUrl

    approveProduct(id: ID): Message
}
